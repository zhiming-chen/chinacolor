% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/4.plot_palette.R
\name{plot_palette}
\alias{plot_palette}
\title{Visualize Color Palettes}
\usage{
plot_palette(
  x,
  type = c("built_in", "custom"),
  name = NULL,
  show_text = FALSE,
  ...
)
}
\arguments{
\item{x}{For built-in palette, the input as below are available:
\enumerate{
\item the name of palette(the element name for a palette in the palette_list),such as "seq01","div18",...;
\item index of the palette, 01-60;
\item the palette_name value in a palette, such as "紫韵花影",for Chinese name;
\item the palette_name_e value in a palette, such as "violet_bloom",for English name;
You can get the palette_name values and a quick preview the palettes by run \code{list_palettes()} function.
for custom palette: a color vector or the name of a color vector.
}}

\item{type}{Palette type, either "built_in" (pre-defined palettes) or "custom" (user-defined color vectors).}

\item{name}{Display name for the palette. Defaults to NULL (uses original name for built-in palettes, vector name or "unnamed palette" for custom palettes).}

\item{show_text}{A logical value ,default is \code{FALSE}.if \code{TRUE},hex values and names of the color in the palette displayed.
For custom palette,if there are no color name defined, then only show the hex color value.}

\item{...}{Additional parameters passed to other functions (currently unused).}
}
\value{
Invisibly returns the color vector.
}
\description{
This function visualizes built-in or custom color palettes as horizontal bar charts.
}
\details{
For built-in palette, colors are extracted from the \code{palette_list} data.
For custom palette, colors are first validated using \code{validate_colors()} and then visualized.

The palette is displayed as a horizontal bar chart with each color block representing a color,
and the palette name shown at the center:
for built_in palette:
\enumerate{
\item if param \code{name} is null,show the index,name of palette, the palette_name value and the palette_name_e value.
\item if param \code{name} is not null,show the \code{name} value.
}
}
\examples{
\dontrun{
# for built_in palette

plot_palette(x = 33, type = "built_in") # show_text is `FALSE`;
plot_palette(x = 33, type = "built_in",show_text = TRUE) # show_text is `TRUE`;

# Name defined,and then the default name rules do not worked; the index and the name of the palette invisible.
plot_palette(x = 33, type = "built_in",show_text = TRUE,name = "for XX Customer ONLY")

# for custom palette

# Plot a custom palette (via color vector)
my_colors <- c("#FF0000", "#00FF00", "#0000FF")
No name defined, colors object name my_colors as the name.
plot_palette(x = my_colors, type = "custom" )

plot_palette(x = my_colors, type = "custom",name = "base colors",show_text = TRUE)

Directly pass a color vector (without pre-defining a variable)
plot_palette(x = c("red", "green", "blue"), type = "custom",show_text = TRUE)
}
}
\seealso{
\code{\link{validate_colors}}: Helper function to validate color values.
\code{\link{list_palettes}}:Display a searchable table of all available color palettes with their identifiers with color preview.
}
