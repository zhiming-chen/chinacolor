% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/7.ctc_palette.R
\name{ctc_palette}
\alias{ctc_palette}
\title{Generate Built-in or Custom Color Palettes}
\usage{
ctc_palette(
  type = c("built_in", "custom"),
  palette_name = NULL,
  n = NULL,
  direction = 1,
  color_pick = list(),
  show_colors = FALSE,
  palette_title = NULL
)
}
\arguments{
\item{type}{Palette type, either "built_in" (pre-defined palettes) or "custom" (user-defined selection). Defaults to one of these.}

\item{palette_name}{ONLY valid when type = "built_in".
the input as below are available:
\enumerate{
\item the name of palette(the element name for a palette in the palette_list),such as "seq01","div18",...;
\item index of the palette, 01-60;
\item the palette_name value in a palette, such as "紫韵花影",for Chinese name;
\item the palette_name_e value in a palette, such as "violet_bloom",for English name;
You can get the palette_name values and a quick preview the palettes by run \code{list_palettes()} function.
}}

\item{n}{Number of colors required (ONLY valid when type = "built_in").
If exceeding the base color count of the palette, sequential and diverging palettes will interpolate,
while qualitative palettes will cycle through existing colors.}

\item{direction}{Color order direction (only valid when type = "built_in"), 1 for normal order, -1 for reversed. Defaults to 1.}

\item{color_pick}{List of parameters for custom palette selection (ONLY valid when type = "custom"). Should contain:
\itemize{
\item group_info: A list with 'group' (vector of groups) and 'subgroup' (list of subgroups).
\item color_id: Vector of specific color IDs to include (optional).
\item order: Sorting rule, 1 for input order, 0 for ascending ID, -1 for descending ID (defaults to 1).
}
Use \code{create_color_pick()} to generate this list.}

\item{show_colors}{Logical (TRUE/FALSE) indicating whether to display a preview of the palette. Defaults to FALSE.}

\item{palette_title}{Title for the palette preview (only used when show_colors = TRUE). Defaults to NULL.}
}
\value{
A character vector of hexadecimal color codes.
}
\description{
This function generates two types of color palettes: built-in palettes and custom palettes.
Built-in palettes include sequential (seq01-seq20), diverging (div01-div20), and qualitative (qual01-qual20) types,
supporting dynamic color count and direction adjustments. Custom palettes allow color selection via groups, subgroups,
or direct color IDs, with configurable sorting rules.
}
\details{
Built-in palettes (type = "built_in") rely on the \code{palette_list} data, which CAN be loaded via \code{data(palette_list)} before use.
This data is a list where each element contains:
\itemize{
\item hex: Vector of hexadecimal color codes.
\item name:Vector of the color names,Chinese version.
\item color_count: Number of base colors in the palette.
\item type: Palette category ("sequential", "diverging", or "qualitative").
\item palette_name: Chinese name for the palette.
\item palette_name_e: English name for the palette.
\item ......
you can run \code{list_palettes}function for a quick view of all of the built_in palettes.
}

Valid built-in palette names/indexes:
\itemize{
\item Sequential: "seq01" to "seq20" (indexes 1-20).
\item Diverging: "div01" to "div20" (indexes 21-40).
\item qualitative: "qual01" to "qual20" (indexes 41-60).
}

Custom palettes (type = "custom") rely on the \code{chinacolor} data, which includes color group, subgroup, and unique color_id.
The selection logic is: first extract colors by group and subgroup, then append explicitly specified color_ids,
and finally deduplicate and sort according to the specified rule.
}
\examples{
\dontrun{
# for built_in palette
# 1 Using a built-in sequential palette (seq05)
pal_builtin <- ctc_palette(
  type = "built_in",
  palette_name = "seq05",  # Valid sequential palette name
  n = 5,                      # Number of colors to extract
  direction = 1,              # Normal order
  show_colors = TRUE          # Display color preview
)

 # 2 Using a built-in diverging palette with defined plot title
 pal_div <- ctc_palette(
  type = "built_in",
  palette_name = 38,
  n = 7,
  direction = -1,              # Reversed order
  palette_title = "Just for Test",show_colors = T
)
 # 3 Using a built-in palette BY palette_name value
 pal_div <- ctc_palette(
  type = "built_in",
  palette_name = "古陶温光",
  n = 5,
  direction = 1,
  show_colors = T
)
for custom palette
# 4 Using a custom palette (filtered by group and subgroup),no plot title defined.
custom_pick <- create_color_pick(
 groups = c(35, 27),
 subgroups = list(c(2, 4), c(1, 3)),
 order_rule = 1
)
pal_custom <- ctc_palette(
 type = "custom",
 color_pick = custom_pick,
 show_colors = TRUE
)

# 5 Custom palette (mixing group selection with direct color_ids)
custom_pick2 <- create_color_pick(
  groups = 35,
  subgroups = list(-1),  # -1 reverses subgroup order (4:3:2:1)
  color_id = c(4, 8, 12),
  order_rule = 0         # Sort by ascending ID
)
pal_custom2 <- ctc_palette(type = "custom",
color_pick = custom_pick2, show_colors = TRUE,palette_title = "Just for Test")
}
}
\seealso{
Helper function \code{create_color_pick()} for generating the \code{color_pick} parameter;
\code{plot_palettes()} to visualize built-in palettes;
\code{list_palettes()} to display a searchable table of all available color palettes with their identifiers with color preview.
Built-in palettes data \code{palette_list} and raw colors data \code{chinacolor} storing built-in palettes and custom color information respectively.
}
